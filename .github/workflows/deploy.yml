name: Ticketing Deployment
on:
  push:
    branches:
      - main
      - dev
# env:
#   CACHE_KEY: node-deps
#   MONGODB_DB_NAME: gha-demo
permissions:
  id-token: write
  contents: read

# env:
#   # Setting an environment variable with the value of a configuration variable
#   ENV_VAR: ${{ vars.ENV_CONTEXT_VAR }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}
    steps:
      - name: Get Code
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v2
        id: az-login
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # - name: Azure CLI script
      #   uses: azure/cli@v2
      #   with:
      #     azcliversion: latest
      #     inlineScript: |
      #       az account show
      #       secret=$(az keyvault secret show \
      #       --name DATABRICKS-CLIENT-SECRET \
      #       --vault-name databricks75-kv \
      #       --query value -o tsv)
      #       echo "Secret: $secret"

      - name: Get Secrets
        id: get-secrets
        if: steps.az-login.outcome == 'success'
        uses: ./.github/actions/get-keyvault-secret
        with:
          keyvault_name: databricks75-kv
          secret_name: DATABRICKS-CLIENT-SECRET

      - name: Output Information
        run: |
          echo "Secret: ${{ steps.get-secrets.outputs.secret_value }}"

      # - name: Install Databricks cli
      #   id: databricks-cli-install
      #   if: steps.get-secrets.outcome == 'success'
      #   uses: databricks/setup-cli@main

      # - run: databricks bundle deploy
      #   if: steps.databricks-cli-install.outcome == 'success'
      #   working-directory: .
      #   env:
      #     DATABRICKS_CLIENT_SECRET: ${{ secrets.DATABRICKS_CLIENT_SECRET }}
      #     DATABRICKS_CLIENT_ID: ${{ secrets.DATABRICKS_CLIENT_ID }}
      #     DATABRICKS_BUNDLE_ENV: ${{ vars.ENV_CONTEXT_VAR }}
