name: Ticketing Deployment
on:
  push:
    branches:
      - main
      - dev

permissions:
  contents: write # to be able to publish a GitHub release
  issues: write # to be able to comment on released issues
  pull-requests: write # to be able to comment on released pull requests
  id-token: write # to enable use of OIDC for npm provenance

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}
    steps:
      - name: Get Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # - uses: christophebedard/tag-version-commit@v1
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     version_tag_prefix: 'v'
      #     version_regex: 'Version: ([0-9]+\.[0-9]+\.[0-9]+)'

      - name: Install semantic
        run: |
          npm install semantic-release

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        with:
          tag_format: ${version}-develop
          extra_plugins: |
            @semantic-release/git
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Azure Login
      #   uses: azure/login@v2
      #   id: az-login
      #   with:
      #     creds: ${{ secrets.AZURE_CREDENTIALS }}

      # - name: Get Secrets
      #   id: get-secrets
      #   if: steps.az-login.outcome == 'success'
      #   uses: Azure/get-keyvault-secrets@v1
      #   with:
      #     keyvault: ${{ vars.KEYVAULT_NAME }}
      #     secrets: 'DATABRICKS-CLIENT-SECRET, DATABRICKS-CLIENT-ID'

      # - name: Install Databricks cli
      #   id: databricks-cli-install
      #   if: steps.get-secrets.outcome == 'success'
      #   uses: databricks/setup-cli@main

      # - run: databricks bundle deploy
      #   if: steps.databricks-cli-install.outcome == 'success'
      #   working-directory: .
      #   env:
      #     DATABRICKS_CLIENT_SECRET: ${{ steps.get-secrets.outputs['DATABRICKS-CLIENT-SECRET'] }}
      #     DATABRICKS_CLIENT_ID: ${{ steps.get-secrets.outputs['DATABRICKS-CLIENT-ID'] }}
      #     DATABRICKS_BUNDLE_ENV: ${{ vars.ENV_CONTEXT_VAR }}
